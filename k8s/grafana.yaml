apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: devops-demo
data:
  prometheus.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus:9090
      isDefault: true
      editable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: devops-demo
data:
  dashboard.json: |
    {
      "dashboard": {
        "title": "DevOps Demo Dashboard",
        "panels": [
          {
            "title": "HTTP Requests Total",
            "targets": [
              {
                "expr": "rate(http_requests_total[5m])"
              }
            ],
            "type": "graph"
          },
          {
            "title": "Application Uptime",
            "targets": [
              {
                "expr": "app_uptime_seconds"
              }
            ],
            "type": "stat"
          },
          {
            "title": "Error Rate",
            "targets": [
              {
                "expr": "rate(http_errors_total[5m])"
              }
            ],
            "type": "graph"
          }
        ]
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: devops-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.0.0
          ports:
            - containerPort: 3000
              name: web
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin123
            - name: GF_INSTALL_PLUGINS
              value: grafana-piechart-panel
          volumeMounts:
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: storage
              mountPath: /var/lib/grafana
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "200m"
      volumes:
        - name: datasources
          configMap:
            name: grafana-datasources
        - name: storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: devops-demo
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30030
